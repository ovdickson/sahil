name: Build and Push to ECR

on:
  push:
    branches: [ "migrate-to-aws" ]
    paths:
      - 'docker/**'
      - '.github/workflows/build-and-push-ecr.yml'
      - 'docker-compose.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'docker/**'
      - '.github/workflows/build-and-push-ecr.yml'
      - 'docker-compose.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: eu-west-1  # Set your AWS region here
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ vars.ACCOUNT_ID }}:role/${{ vars.ROLE_NAME }}
        role-session-name: github_action_session
        aws-region: ${{ vars.REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push images to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sahil-ecr-registry  # Replace with your desired ECR repository name
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Find all Dockerfiles in the /infra/docker directory
        dockerfiles=$(find /infra/docker -name "Dockerfile.*")
        
        # Loop through each Dockerfile and build/push the image
        for dockerfile in $dockerfiles; do
          # Extract the service name from the Dockerfile name
          service_name=$(basename $dockerfile | cut -d. -f2)
          
          # Build and push the image
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --push \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$service_name-$IMAGE_TAG \
            --file $dockerfile \
            .
        done

        # Move cache
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache