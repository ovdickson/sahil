name: Build and Push to ECR

on:
  push:
    branches: [ migrate-to-aws ]

permissions:
    id-token: write
    contents: read

env:
  ECR_REGISTRY: 060795911441-id.dkr.ecr.eu-west-1.amazonaws.com  # Replace with your ECR registry
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ vars.ACCOUNT_ID }}:role/${{ vars.ROLE_NAME }}
        role-session-name: github_action_session
        aws-region: ${{ vars.REGION }}

    - name: Get OIDC Token
      id: get_oidc_token
      run: |
        curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r '.value' > /tmp/web_identity_token_file

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push images to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build and push sahil-website-test
        docker build -t $ECR_REGISTRY/sahil-website-test:$IMAGE_TAG -f ./infra/docker/Dockerfile.website .
        docker push $ECR_REGISTRY/sahil-website-test:$IMAGE_TAG

        # Build and push sahil-api
        docker build -t $ECR_REGISTRY/sahil-api:$IMAGE_TAG -f ./infra/docker/Dockerfile.api .
        docker push $ECR_REGISTRY/sahil-api:$IMAGE_TAG

        # Build and push sahil-agent
        docker build -t $ECR_REGISTRY/sahil-agent:$IMAGE_TAG -f ./infra/docker/Dockerfile.agent .
        docker push $ECR_REGISTRY/sahil-agent:$IMAGE_TAG

        # Build and push sahil-client
        docker build -t $ECR_REGISTRY/sahil-client:$IMAGE_TAG -f ./infra/docker/Dockerfile.client .
        docker push $ECR_REGISTRY/sahil-client:$IMAGE_TAG

        echo "Images tagged with $IMAGE_TAG have been built and pushed to ECR"